/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cronometro;

import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ICMC
 */
public class CronometroInterface extends javax.swing.JFrame {
    
    /**
     * Creates new form CronometroInterface
     */
    
    private int min, seg, mili;
    private boolean flag = false ; //False == Parar , True == Iniciar
    public CronometroInterface() {
        
        initComponents();
        txtfMinutos.setEditable(false);
        txtfSegundos.setEditable(false);
        txtfMilisegundos.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField4 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        txtfMinutos = new javax.swing.JTextField();
        txtfSegundos = new javax.swing.JTextField();
        txtfMilisegundos = new javax.swing.JTextField();
        bttFechar = new javax.swing.JButton();
        bttReset = new javax.swing.JButton();
        bttIniciarParar = new javax.swing.JButton();

        jTextField4.setText("jTextField4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtfMinutos.setText("     00");
        txtfMinutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfMinutosActionPerformed(evt);
            }
        });

        txtfSegundos.setText("      00");
        txtfSegundos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfSegundosActionPerformed(evt);
            }
        });

        txtfMilisegundos.setText("        000");

        bttFechar.setText("Fechar");
        bttFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttFecharActionPerformed(evt);
            }
        });

        bttReset.setText("Resetar");
        bttReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttResetActionPerformed(evt);
            }
        });

        bttIniciarParar.setText("Iniciar");
        bttIniciarParar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttIniciarPararActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfMinutos)
                    .addComponent(bttFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bttReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtfSegundos))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bttIniciarParar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtfMilisegundos))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfMilisegundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttFechar)
                    .addComponent(bttReset)
                    .addComponent(bttIniciarParar))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void cronometro(CronometroInterface obj){
            
         new Thread() {
         int  minuto = obj.txtf(2,-1) , segundo = obj.txtf(1, -1) , miliseg = obj.txtf(0, -1);
         @Override
         public void run() { 
             while(flag == true){
                 try {
                     Thread.sleep(10);
                     
                     
                      miliseg++;
                     
                     if(miliseg > 99){
                        miliseg = 0;
                        segundo++;
                             }
                     if(segundo > 60){
                         segundo = 0;
                          minuto++;
                     }
                     
                     if(minuto > 60){
                         
                         minuto = 0 ;
                         segundo = 0; 
                         miliseg = 0;
                     }
                       
                     obj.txtf(0, miliseg);
                     obj.txtf(1, segundo);
                     obj.txtf(2, minuto);
                     
                     
                 } catch (InterruptedException ex) {
                     Logger.getLogger(CronometroInterface.class.getName()).log(Level.SEVERE, null, ex);
                 }
                   
                    
                 
             
             
             
             
             }
             
         
         
         
             
         
         
         }
       
    
  }.start();
 
}
    private void txtfMinutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfMinutosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfMinutosActionPerformed

    private void txtfSegundosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfSegundosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfSegundosActionPerformed

    private void bttFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttFecharActionPerformed
        // TODO add your handling code here:
        System.exit(0);
        
    }//GEN-LAST:event_bttFecharActionPerformed

    private void bttResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttResetActionPerformed
        Update(1);
        
    }//GEN-LAST:event_bttResetActionPerformed

    private void bttIniciarPararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttIniciarPararActionPerformed
        
            Update(0);
  
        
        
        
        
    }//GEN-LAST:event_bttIniciarPararActionPerformed
    private void Update(int modo){  //modo 0 = update botao iniciar/parar , modo 1 =  reset total + iniciar;
     
        
        
        if(modo == 0 ){
             if(this.flag == false){
                this.flag = true;
                this.bttIniciarParar.setText("Parar");
        
              }else{
                this.flag = false;
                this.bttIniciarParar.setText("Iniciar");
        
             }
        
        }else{
            
            this.mili = 000;
            this.seg = 00;
            this.min = 00;
            this.txtfMilisegundos.setText("000");
            this.txtfMinutos.setText("00");
            this.txtfSegundos.setText("00");
            this.flag = false;
            this.bttIniciarParar.setText("Iniciar");
                
                
                
                
                }
        cronometro(this);
        
        
        }
        
         
    
    public int txtf(int param , int num){ // param = 0 -> milis, param = 1 -> seg , param = 2 -> min
        if(num == -1){
            switch(param){
            case 0:
                  
                return this.mili;
                
            case 1: 
                
                return this.seg;
               
            case 2:
                
                return this.min;
        
            }
        
        
        
        }else{
        
        switch(param){
            case 0:
                this.txtfMilisegundos.setText("" + num);   
                this.mili = num;
                return this.mili;
                
            case 1: 
                this.txtfSegundos.setText(""+ num);
                this.seg = num;
                return this.seg;
               
            case 2:
                this.txtfMinutos.setText(""+ num);
                this.min = num;
                return this.min;
           
                
        }
        
    }
        return 0;
    
    
    
    
    }
    
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CronometroInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CronometroInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CronometroInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CronometroInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CronometroInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttFechar;
    private javax.swing.JButton bttIniciarParar;
    private javax.swing.JButton bttReset;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField txtfMilisegundos;
    private javax.swing.JTextField txtfMinutos;
    private javax.swing.JTextField txtfSegundos;
    // End of variables declaration//GEN-END:variables
}
